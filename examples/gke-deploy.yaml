apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  strategy: {}
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - env:
        - name: SERVER_URL
          value: 'server:50051'
        image: gcr.io/lab-devops-372913/grpc-codegen:latest
        imagePullPolicy: Always
        name: worker
        command:
          - node
          - dynamic_codegen/greeter_client.js
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: client
  name: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  strategy: {}
  template:
    metadata:
  
      labels:
        app: client
    spec:
      containers:
      - env:
        - name: SERVER_URL
          value: 'server:50051'
        image: gcr.io/lab-devops-372913/grpc-codegen:latest
        imagePullPolicy: Always
        name: client
        command:
          - node
          - dynamic_codegen/index.js
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: envoy
  name: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy
  strategy: {}
  template:
    metadata:
  
      labels:
        app: envoy
    spec:
      containers:
      - image: gcr.io/lab-devops-372913/grpc-envoy:latest
        imagePullPolicy: Always
        name: envoy
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: server
  name: server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: server
  strategy: {}
  template:
    metadata:
  
      labels:
        app: server
    spec:
      containers:
      - image: gcr.io/lab-devops-372913/grpc-codegen:latest
        imagePullPolicy: Always
        command:
          - node
          - dynamic_codegen/greeter_server.js
        name: server
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/load-balancer-type: Internal
  labels:
    app: server
  name: server
spec:
  ports:
  - name: http
    port: 50051
    protocol: TCP
    targetPort: 50051
  clusterIP: None
  selector:
    app: server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/load-balancer-type: Internal
  labels:
    app: envoy
  name: envoy
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  labels:
    app: client
  name: client
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: client
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce-internal
  name: client
  namespace: default
spec:
  defaultBackend:
    service:
      name: client
      port:
        number: 3000
  rules:
  - http:
      paths:
      - backend:
          service:
            name: client
            port:
              number: 3000
        path: /
        pathType: Prefix